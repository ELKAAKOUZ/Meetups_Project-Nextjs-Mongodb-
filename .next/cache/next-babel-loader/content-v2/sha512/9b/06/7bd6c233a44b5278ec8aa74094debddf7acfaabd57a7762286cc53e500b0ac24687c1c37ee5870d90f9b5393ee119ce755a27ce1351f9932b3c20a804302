{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mahf0z/g/Meetups_Project_with_Next/pages/[meetupId]/index.js\";\nimport React, { Fragment } from \"react\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction meetupIdDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    description: \"this city located in germany\",\n    address: \"any city ,any street\",\n    title: \"first meetup\",\n    img: \"https://media.istockphoto.com/photos/historic-city-of-wrzburg-franconia-bavaria-germany-picture-id526215661\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://Kano0o:PA$sw0rd21399333@cluster0.c9sa9.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupcollections = db.collection(\"meetups\");\n  const meetups = await meetupcollections.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  //fetch data\n  const meetupId = context.params.meetupId;\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: {\n        title: \"hala\",\n        address: \"meetsalsail\",\n        description: \"local city in dakhliya governement \"\n      }\n    }\n  };\n}\nexport default meetupIdDetails;","map":{"version":3,"sources":["/home/mahf0z/g/Meetups_Project_with_Next/pages/[meetupId]/index.js"],"names":["React","Fragment","MongoClient","MeetupDetail","meetupIdDetails","getStaticPaths","client","connect","db","meetupcollections","collection","meetups","find","_id","toArray","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","console","log","props","meetupData","title","address","description"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,eAAT,GAA2B;AACzB,sBACE,QAAC,YAAD;AACE,IAAA,WAAW,EAAC,8BADd;AAEE,IAAA,OAAO,EAAC,sBAFV;AAGE,IAAA,KAAK,EAAC,cAHR;AAIE,IAAA,GAAG,EAAC;AAJN;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AACD,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMJ,WAAW,CAACK,OAAZ,CACnB,sGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAEF,MAAM,CAACL,GAAP,CAAWQ,QAAX;AADJ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAQD;AACD,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AACA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACA,SAAO;AACLM,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACVC,QAAAA,KAAK,EAAE,MADG;AAEVC,QAAAA,OAAO,EAAE,aAFC;AAGVC,QAAAA,WAAW,EAAE;AAHH;AADP;AADF,GAAP;AASD;AACD,eAAe1B,eAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction meetupIdDetails() {\n  return (\n    <MeetupDetail\n      description=\"this city located in germany\"\n      address=\"any city ,any street\"\n      title=\"first meetup\"\n      img=\"https://media.istockphoto.com/photos/historic-city-of-wrzburg-franconia-bavaria-germany-picture-id526215661\"\n    />\n  );\n}\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://Kano0o:PA$sw0rd21399333@cluster0.c9sa9.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const meetupcollections = db.collection(\"meetups\");\n  const meetups = await meetupcollections.find({}, { _id: 1 }).toArray();\n\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: {\n        meetupId: meetup._id.toString(),\n      },\n    })),\n  };\n}\nexport async function getStaticProps(context) {\n  //fetch data\n  const meetupId = context.params.meetupId;\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: {\n        title: \"hala\",\n        address: \"meetsalsail\",\n        description: \"local city in dakhliya governement \",\n      },\n    },\n  };\n}\nexport default meetupIdDetails;\n"]},"metadata":{},"sourceType":"module"}