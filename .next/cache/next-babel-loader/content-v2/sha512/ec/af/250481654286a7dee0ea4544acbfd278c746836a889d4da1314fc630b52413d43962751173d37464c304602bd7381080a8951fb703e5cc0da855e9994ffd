{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mahf0z/g/Meetups_Project_with_Next/pages/[meetupId]/index.js\";\nimport React, { Fragment } from \"react\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction meetupIdDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    description: props.meetupData.description,\n    address: props.meetupData.address,\n    title: props.meetupData.title,\n    img: props.meetupData.img\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://Kano0o:PA$sw0rd21399333@cluster0.c9sa9.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupcollections = db.collection(\"meetups\");\n  const meetups = await meetupcollections.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  //fetch data\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://Kano0o:PA$sw0rd21399333@cluster0.c9sa9.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupcollections = db.collection(\"meetups\");\n  const selectedMeetup = await meetupcollections.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        description: selectedMeetup.description,\n        image: selectedMeetup.image\n      }\n    }\n  };\n}\nexport default meetupIdDetails;","map":{"version":3,"sources":["/home/mahf0z/g/Meetups_Project_with_Next/pages/[meetupId]/index.js"],"names":["React","Fragment","MongoClient","ObjectId","MeetupDetail","meetupIdDetails","props","meetupData","description","address","title","img","getStaticPaths","client","connect","db","meetupcollections","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","console","log","id","image"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,sBACE,QAAC,YAAD;AACE,IAAA,WAAW,EAAEA,KAAK,CAACC,UAAN,CAAiBC,WADhC;AAEE,IAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBE,OAF5B;AAGE,IAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBG,KAH1B;AAIE,IAAA,GAAG,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJxB;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AACD,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACnB,sGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AACAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AADJ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAQD;AACD,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AACA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACA,QAAMf,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACnB,sGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMe,cAAc,GAAG,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AACrDb,IAAAA,GAAG,EAAEjB,QAAQ,CAACyB,QAAD;AADwC,GAA1B,CAA7B;AAGAf,EAAAA,MAAM,CAACS,KAAP;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACA,SAAO;AACLtB,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACV6B,QAAAA,EAAE,EAAEJ,cAAc,CAACZ,GAAf,CAAmBS,QAAnB,EADM;AAEVnB,QAAAA,KAAK,EAAEsB,cAAc,CAACtB,KAFZ;AAGVD,QAAAA,OAAO,EAAEuB,cAAc,CAACvB,OAHd;AAIVD,QAAAA,WAAW,EAAEwB,cAAc,CAACxB,WAJlB;AAKV6B,QAAAA,KAAK,EAAEL,cAAc,CAACK;AALZ;AADP;AADF,GAAP;AAWD;AACD,eAAehC,eAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction meetupIdDetails(props) {\n  return (\n    <MeetupDetail\n      description={props.meetupData.description}\n      address={props.meetupData.address}\n      title={props.meetupData.title}\n      img={props.meetupData.img}\n    />\n  );\n}\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://Kano0o:PA$sw0rd21399333@cluster0.c9sa9.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const meetupcollections = db.collection(\"meetups\");\n  const meetups = await meetupcollections.find({}, { _id: 1 }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: {\n        meetupId: meetup._id.toString(),\n      },\n    })),\n  };\n}\nexport async function getStaticProps(context) {\n  //fetch data\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\n    \"mongodb+srv://Kano0o:PA$sw0rd21399333@cluster0.c9sa9.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const meetupcollections = db.collection(\"meetups\");\n  const selectedMeetup = await meetupcollections.findOne({\n    _id: ObjectId(meetupId),\n  });\n  client.close();\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        description: selectedMeetup.description,\n        image: selectedMeetup.image,\n      },\n    },\n  };\n}\nexport default meetupIdDetails;\n"]},"metadata":{},"sourceType":"module"}